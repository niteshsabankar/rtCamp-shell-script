#!/bin/bash

clear

phpgrp='php5-common php5-mysqlnd php5-xmlrpc php5-curl php5-gd php5-cli php5-fpm php-pear php5-dev php5-imap php5-mcrypt'
mysql='percona-server-server-5.6 percona-server-client-5.6'

for pkg in php mysql nginx; do
dpkg-query -s $pkg 
	if [ $? -eq 0 ]; then								#checking exit status if package already installed
		echo "$pkg is already installed"
	else
		if [ $pkg = php ]; then
			apt-get install python-software-properties
			add-apt-repository ppa:ondrej/php5
			apt-get update
			apt-get -y install $phpgrp
		elif [ $pkg = mysql ]; then
			apt-key adv --keyserver keys.gnupg.net --recv-keys 1C4CBDCDCD2EFD2A
			echo "deb http://repo.percona.com/apt `lsb_release -cs` main" >> /etc/apt/sources.list.d/percona.list
			echo "deb-src http://repo.percona.com/apt `lsb_release -cs` main" >> /etc/apt/sources.list.d/percona.list
			apt-get update
			apt-get -y install $mysql
		else
			add-apt-repository ppa:nginx/stable
			apt-get update 
			apt-get -y install nginx
		fi
			if [ $? -eq 0 ]; then						#checking exit status if package installed successfully
				echo "New Package $pkg installed Successfully"
			else 
				echo "Problems while installing $pkg"
				exit
			fi
	fi
done
#---------------------------------------------------------------------------------------------------------------

read -p 'Please Enter Domain Name: ' b
echo "`hostname -i`\t$b" >> /etc/hosts							#hosts Entry for domain (example.com)

#---------------------------------------------------------------------------------------------------------------

echo 'server {
        server_name example.com www.example.com;

	access_log   /var/log/nginx/example.com.access.log;
	error_log    /var/log/nginx/example.com.error.log;

        root /usr/share/nginx/html/wordpress/;
        index index.php;

        location / {
                try_files $uri $uri/ /index.php?$args; 
        }

        location ~ \.php$ {
                try_files $uri =404;
                include fastcgi_params;
                fastcgi_pass 127.0.0.1:9000;
        }
}' > /etc/nginx/sites-available/example.com						#nginx configuration

ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/			#creating softlink in sites-enabled directory 

#-------------------------------------------------------------------------------------------------------------------

wget http://wordpress.org/latest.zip --no-check-certificate				#downloading wordpress zip file
unzip latest.zip -d /usr/share/nginx/html						#unzipping in nginx document root
rm -rf latest.zip									#removing zip file

#-------------------------------------------------------------------------------------------------------------------

service mysqld restart
mysqladmin -u root password mysql							#setting mysql password for root
mysql -u root -pmysql -e 'create database example.com_db'				#creating new database

#-------------------------------------------------------------------------------------------------------------------

cp /usr/share/nginx/html/wordpress/wp-config-sample.php /usr/share/nginx/html/wordpress/wp-config.php

sed -i 's/database_name_here/example.com_db/' /usr/share/nginx/html/wordpress/wp-config.php	#
sed -i 's/username_here/root/' /usr/share/nginx/html/wordpress/wp-config.php			# wp-config.php DB configuration
sed -i 's/password_here/mysql/' /usr/share/nginx/html/wordpress/wp-config.php			#

#-------------------------------------------------------------------------------------------------------------------

chown -R root:root /usr/share/nginx/html/
service nginx restart

echo 'Open example.com in browser'
