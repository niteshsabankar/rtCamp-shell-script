#!/bin/bash

clear

if [ `whoami` != 'root' ]; then
	echo 'You must be root to excecute this script'
	echo 'Or else for non root user, use sudo ./script.sh command to run this script'
	exit 1
fi

phpgrp='php5-mysqlnd php5-fpm'
mysql='percona-server-server-5.6 percona-server-client-5.6'

for pkg in php5 mysql-server nginx; do
dpkg-query -s $pkg 
	if [ $? -eq 0 ]; then								#checking exit status if package already installed
		echo "$pkg is already installed"
	else
		apt-get update
			if [ $? -eq 0 ]; then
				echo 'Repository updated successfully'
			else	
				echo 'Failed to update repository, please update /etc/apt/source.list'
				exit 1
			fi
				if [ $pkg = php5 ]; then
					apt-get -y install $phpgrp
				elif [ $pkg = mysql-server ]; then
					apt-get -y install $mysql
				else
					apt-get -y install nginx
				fi
					if [ $? -eq 0 ]; then
						echo "$pkg installed successfully"
					else
						echo "Failed to install $pkg"
						exit 1
					fi
	fi
done

#---------------------------------------------------------------------------------------------------------------

echo " Please Enter Domain Name : "
read DMNAME
	while [ -z "$DMNAME" ];do
		echo 'Domain can not be empty, Please enter again'
		read DMNAME
	done
echo "`hostname -i`\t$DMNAME" >> /etc/hosts						#hosts Entry for domain (example.com)

#---------------------------------------------------------------------------------------------------------------

echo "server {
        server_name $DMNAME;

	access_log   /var/log/nginx/$DMNAME.access.log;
	error_log    /var/log/nginx/$DMNAME.error.log;

        root /usr/share/nginx/html/wordpress/;
        index index.php;

        location / {
                try_files $uri $uri/ /index.php?$args; 
        }

        location ~ \.php$ {
                try_files \$uri =404;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include fastcgi_params;
        }
}" > /etc/nginx/sites-available/$DMNAME							#nginx configuration

ln -sf /etc/nginx/sites-available/$DMNAME /etc/nginx/sites-enabled/			#creating softlink in sites-enabled directory 
service nginx restart
service php5-fpm restart

#-------------------------------------------------------------------------------------------------------------------

echo 'Please Wait while downloading Wordpress...'
wget http://wordpress.org/latest.zip --no-check-certificate				#downloading wordpress zip file
	if [ $? -eq 0 ]; then
		echo 'Download complete...'
		unzip latest.zip -d /usr/share/nginx/html				#unzipping in nginx document root
			if [ $? -eq 0 ];then
				echo 'successfully upzipped in /usr/share/nginx/html'
				rm -rf latest.zip					#removing zip file
			else
				echo 'Error while unzippig latest.zip...'
				exit 1
	else
		echo 'Downloding Failed...'
		exit 1
	fi

#-------------------------------------------------------------------------------------------------------------------

service mysqld restart
mysqladmin -u root password mysql							#setting 'mysql' password for root
mysql -u root -pmysql -e 'create database example.com_db'				#creating new database
	if [ $? -eq 0 ]; then
		echo 'New database created successfully...'
	else
		echo 'Failed to create new database...'
		exit 1
	fi

#-------------------------------------------------------------------------------------------------------------------
# creating wp-config for example.com_db database
cp /usr/share/nginx/html/wordpress/wp-config-sample.php /usr/share/nginx/html/wordpress/wp-config.php
	if [ $? -eq 0 ]; then
		sed -i 's/database_name_here/example.com_db/' /usr/share/nginx/html/wordpress/wp-config.php
		sed -i 's/username_here/root/' /usr/share/nginx/html/wordpress/wp-config.php
		sed -i 's/password_here/mysql/' /usr/share/nginx/html/wordpress/wp-config.php
		sed -i 's/username_here/wpuser/' /usr/share/nginx/html/wordpress/wp-config.ph
	else
		echo 'Problems while creating wp-config.php'
		exit 1
	fi
	
chown -R www-data:www-data /usr/share/nginx/html/wordpress
chmod -R 755 /usr/share/nginx/html/wordpress

#-------------------------------------------------------------------------------------------------------------------

service nginx restart									#Just to be sure ;-)

echo "Open $DMNAME in browser"
