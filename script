#!/bin/bash

clear

if [ `whoami` != 'root' ]; then
	echo 'You must be root to excecute this script'
	echo 'Or else for non root user, use sudo ./script.sh command to run this script'
	exit 1
fi

EXT='_db'

apt-get update >> /dev/null 2>&1
	if [ $? -eq 0 ]; then
		echo 'Repository updated successfully'
	else	
		echo 'Failed to update repository, please update /etc/apt/source.list'
		exit 1
	fi
	
for pkg in php5 php5-fpm mysql-server nginx; do
dpkg-query -s $pkg >> /dev/null 2>&1
	if [ $? -eq 0 ]; then								#checking exit status if package already installed
		echo "$pkg is already installed"
	else
		
		if [ $pkg = php5 ]; then
			apt-get -y install php5 >> /dev/null 2>&1
		elif [ $pkg = php5-fpm ]; then
			apt-get -y install php5-fpm >> /dev/null 2>&1
		elif [ $pkg = mysql-server ]; then
			#Install MySQL Server in a Non-Interactive mode.
			debconf-set-selections <<< 'mysql-server mysql-server/root_password password mysql'
			debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password mysql'
			apt-get -y install mysql-server >> /dev/null 2>&1
		else
			apt-get -y install nginx >> /dev/null 2>&1
		fi
			if [ $? -eq 0 ]; then
				echo "$pkg installed successfully"
			else
				echo "Failed to install $pkg"
				exit 1
			fi
	fi
done

#---------------------------------------------------------------------------------------------------------------

echo 'Please Enter Domain Name : '
read DMNAME
	while [ -z "$DMNAME" ];do
		echo 'Domain can not be empty, Please enter again : '
		read DMNAME
	done
echo "`hostname -i`\t$DMNAME" >> /etc/hosts						#hosts Entry for domain (example.com)

if [ -d "/etc/nginx/sites-available/$DMNAME" ]; then
		echo "$DMNAME already present, terminating..."
		exit 1
fi

#---------------------------------------------------------------------------------------------------------------
if [ -d /etc/nginx/sites-available -a -d /etc/nginx/sites-enabled ]; then
	echo 'server {
        	server_name SERVER;

		access_log   /var/log/nginx/access.log;
		error_log    /var/log/nginx/error.log;

	   root /usr/share/nginx/html/wordpress/;
	   index index.php;

	   location / {
			try_files $uri $uri/ /index.php?$args; 
        }

	   location ~ \.php$ {
	   		try_files \$uri =404;
			fastcgi_pass unix:/var/run/php5-fpm.sock;
			fastcgi_index index.php;
			include fastcgi_params;
        }
}' > /etc/nginx/sites-available/$DMNAME							#nginx configuration

	sed -i "s/SERVER/$DMNAME/" /etc/nginx/sites-available/$DMNAME
	sed -i "s/access.log/$DMNAME.access.log/" /etc/nginx/sites-available/$DMNAME
	sed -i "s/error.log/$DMNAME.error.log/" /etc/nginx/sites-available/$DMNAME

	ln -sf /etc/nginx/sites-available/$DMNAME /etc/nginx/sites-enabled/		#creating softlink 
	service nginx restart >> /dev/null 2>&1
	service php5-fpm restart >> /dev/null 2>&1
else
	echo 'Nginx not properly installed...'
	exit
fi
#-------------------------------------------------------------------------------------------------------------------

echo 'Please Wait while downloading Wordpress...'
wget http://wordpress.org/latest.zip --no-check-certificate >> /dev/null 2>&1		#downloading wordpress zip file
	if [ $? -eq 0 ]; then
		echo 'Download complete...'
		unzip latest.zip -d /usr/share/nginx/html >> /dev/null 2>&1		#unzipping in nginx document root
			if [ $? -eq 0 ];then
				echo 'successfully upzipped in /usr/share/nginx/html'
				rm -rf latest.zip					#removing zip file
			else
				echo 'Error while unzippig latest.zip...'
				exit 1
			fi
	else
		echo 'Downloding Failed...'
		exit 1
	fi

#-------------------------------------------------------------------------------------------------------------------
# creating wp-config for example.com_db database
cp /usr/share/nginx/html/wordpress/wp-config-sample.php /usr/share/nginx/html/wordpress/wp-config.php
	if [ $? -eq 0 ]; then
		sed -i "s/database_name_here/$DMNAME$EXT/" /usr/share/nginx/html/wordpress/wp-config.php
		sed -i 's/username_here/root/' /usr/share/nginx/html/wordpress/wp-config.php
		sed -i 's/password_here/mysql/' /usr/share/nginx/html/wordpress/wp-config.php
		sed -i 's/username_here/wpuser/' /usr/share/nginx/html/wordpress/wp-config.ph
	else
		echo 'Problems while creating wp-config.php'
		exit 1
	fi
	
chown -R www-data:www-data /usr/share/nginx/html/wordpress
chmod -R 755 /usr/share/nginx/html/wordpress

#-------------------------------------------------------------------------------------------------------------------
mysql -u root -pmysql -e "create database if not exists \`$DMNAME$EXT\`; GRANT ALL PRIVILEGES ON \`$DMNAME$EXT\`.* TO 'wpuser'@'localhost' IDENTIFIED BY 'password'; FLUSH PRIVILEGES;"

	if [ $? -eq 0 ]; then
		echo 'New database created successfully...'
	else
		echo 'Failed to create new database...'
		exit 1
	fi

#-------------------------------------------------------------------------------------------------------------------

service nginx restart	>> /dev/null 2>&1							#Just to be sure ;-)

echo "Open $DMNAME in browser"
